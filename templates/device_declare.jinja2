## Copyright (c) 2018 Nordic Semiconductor ASA 
## SPDX-License-Identifier: Apache-2.0         

<% def name="gen_device_name(device)"> 
	<% name = device['compatible']['0']|replace(',','_')|replace('-','_') %>
	<% name = name + "_%x"|format(device['reg']['0']['address']['0']) %>
	${name}
<%/def>

<% def name="gen_irq_connect(device, irq_name, isr_name)" >
% for irq in device['interrupts']:
	% if irq_name == irq:
	IRQ_CONNECT(${ device['interrupts'][irq]['irq'] }, \
		    ${ device['interrupts'][irq]['priority'] }, \
		    ${ isr_name }, \
		    DEVICE_GET(${ device_name }, \
		    0);
	irq_enable(${ device['interrupts'][irq]['irq'] });
	% endif
% endfor
<%/def>

<% def name="device(data, compatibles, irq_config_function_body=None, config_struct_body=None, init_priority_flag='CONFIG_KERNEL_INIT_PRIORITY_DEVICE', kernel_level='POST_KERNEL')">

  % for compa in compatibles:
    % for device_ref in data['devicetree']['compatibles'][compa]:
      <% 
        device = data['devicetree']['devices'][device_ref] 

        device_name              = gen_device_name(device)
        config_struct_name       = device_name + "_config"
        data_struct_name         = device_name + "_data"
        irq_config_function_name = device_name + "_config_irq"
        device_label             = device['label']
     %>

#ifdef CONFIG_${ device_label }
#ifdef ${ irq_flag }

DEVICE_DECLARE(${ device_name });
static void ${ irq_config_function_name }(struct device *dev)
{
% if irq_config_function_body != None:
  {$ irq_config_function_body(device_name, config_struct_name, data_struct_name, irq_config_function_name, device_label) }
% endif
}

#endif

% if get_param(params, 'config_struct') != "":
static const struct {{ get_param(params, 'config_struct') }} ${ config_struct_name } = {
% if config_struct_body != None:
${ config_struct_body(device_name, config_struct_name, data_struct_name, irq_config_function_name, device_label) }
% endif
};
% endif

{% if get_param(params, 'data_struct') != "" -%}
static struct {{ get_param(params, 'data_struct') }} {{ data_struct_name }} = {
{%- block data_struct_body scoped -%}
{%- endblock -%}
};
{%- endif %}

DEVICE_AND_API_INIT({{ device_name }}, \
                    "{{ device_label }}", \
                    &{{ get_param(params, 'init_function') }}, \
                    {{'NULL' if get_param(params, 'data_struct') == '' else '&'+data_struct_name }}, \
                    {{'NULL' if get_param(params, 'config_struct') == '' else '&'+config_struct_name }}, \
                    {{ kernel_level }}, \
                    {{ init_priority_flag }}, \
                    &{{ get_param(params, 'api_struct') }});

#endif // CONFIG_{{ device_label }}
{%- endfor -%}

% endfor

<%/def>
