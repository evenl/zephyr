{% macro parameterlist(instances) %}
    , 
    {%- for n in range(instances) -%}
    p{{n}}, t{{n}}{{"" if loop.last else ", "}}
    {%- endfor -%}
{% endmacro %}

{% macro K_SYSCALL_DECLARE_zephyr_supervisor(postfix, index) %}
#define K_SYSCALL_DECLARE{{index}}_{{postfix}}(id, name{{ "" if postfix == "VOID" else ", ret"}}{{parameterlist(index)}}) \
        extern void _impl_##name(void); \
        static inline void name(void) \
        { \
                {{ "" if postfix == "VOID" else "return " }}_impl_##name(); \
        }
{% endmacro %}

{% macro K_SYSCALL_DECLARE_zephyr_user(postfix, index) %}
#define K_SYSCALL_DECLARE{{index}}_{{postfix}}(id, name{{ "" if postfix == "VOID" else ", ret"}}{{parameterlist(index)}}) \
        static inline void name(void) \
        { \
                static _GENERIC_SECTION(hndlr_ref) __used void *href = (void *)&_handler_##name; \
                {{ "" if postfix == "VOID" else "return (ret)" }}_arch_syscall_invoke{{index}}(id); \
        }
{% endmacro %}

{% macro K_SYSCALL_DECLARE_mixed(postfix, index) %}
#define K_SYSCALL_DECLARE{{index}}_{{postfix}}(id, name{{ "" if postfix == "VOID" else ", ret"}}{{parameterlist(index)}}) \
        static inline void name(void) \
        { \
               if (_is_user_context()) { \
                        static _GENERIC_SECTION(hndlr_ref) __used void *href = (void *)&_handler_##name; \
                        {{ "" if postfix == "VOID" else "return (ret)" }}_arch_syscall_invoke{{index}}(id); \
                } else { \
                        compiler_barrier(); \
                        {{ "" if postfix == "VOID" else "return " }}_impl_##name(); \
                }
        }
{% endmacro %}

/* Auto-generated by gen_syscall_header.py, do not edit! */

#ifndef GEN_SYSCALL_H
#define GEN_SYSCALL_H
#include <syscall.h>
{% for n in range(context.instances|int) %}
#if !defined(CONFIG_USERSPACE) || defined(__ZEPHYR_SUPERVISOR__)
{% for postfix in context.postfixes %}
{{ K_SYSCALL_DECLARE_zephyr_supervisor(postfix, n) }}
{% endfor %}
#elif defined(__ZEPHYR_USER__)
{% for postfix in context.postfixes %}
{{ K_SYSCALL_DECLARE_zephyr_user(postfix, n) }}
{% endfor %}
#else /* mixed kernel/user macros */
{% for postfix in context.postfixes %}
{{ K_SYSCALL_DECLARE_mixed(postfix, n) }}
{% endfor %}
#endif /* mixed kernel/user macros */
{% endfor %}
#endif /* GEN_SYSCALL_H */